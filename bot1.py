#!/usr/bin/python3
# -*- coding: utf-8 -*-
import telebot
from telebot.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
    
from database import DataBase as DB
import config
    
    
bot = telebot.TeleBot(config.TOCEN)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
menu = ReplyKeyboardMarkup(resize_keyboard = True)
money = KeyboardButton('üí≥–ë–∞–ª–∞–Ω—Åüí∏')
order = KeyboardButton('üíπ–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑üíº')
menu.add(money, order)

# –ë–∞–ª–∞–Ω—Å
b = InlineKeyboardMarkup(row_width = 1)
put = InlineKeyboardButton("üí∏–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data = 'put')
b.add(put)

# –ù–∞–∑–∞–¥
back = InlineKeyboardMarkup(row_width = 1)
exit = InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data = 'exit')
back.add(exit)

# –ó–∞–∫–∞–∑—á–∏–∫–∞–º
oder = InlineKeyboardMarkup(row_width = 1)
putb = InlineKeyboardButton("üí∏–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data = 'put')
like = InlineKeyboardButton("üëç–õ–∞–π–∫–∏ 1 —Ä—É–±", callback_data = 'like')
sub = InlineKeyboardButton("üåç–ü–æ–¥–ø–∏—Å–∫–∏ 2 —Ä—É–±", callback_data = 'sub')
watch = InlineKeyboardButton("üì∫–ü—Ä–æ—Å–º–æ—Ç—Ä—ã 2 —Ä—É–±", callback_data = 'watch')
comment = InlineKeyboardButton("üìÉ–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ 5 —Ä—É–±", callback_data = 'comment')
feedback = InlineKeyboardButton("üì®–û—Ç–∑—ã–≤—ã 5 —Ä—É–±", callback_data = 'feed')
oder.add(putb, like, sub, watch, comment, feedback)

# –ö–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
verifi = InlineKeyboardMarkup(row_width = 1)
ver = InlineKeyboardButton("–û–¥–æ–±—Ä–∏—Ç—å", callback_data = 'y')
unver = InlineKeyboardButton("–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data = 'n')
verifi.add(ver, unver)

compleet = InlineKeyboardMarkup(row_width = 1)
com = InlineKeyboardButton("–ì–æ—Ç–æ–≤–æ", callback_data = 'com')
compleet.add(com)


@bot.message_handler(commands = ['start', 'help'])
def start(message):
	try:
		db = DB()
		db.AddUser(message.chat.id)
		bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! \n –†–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å–≤–æ–≤–∞—Ç—å —Ç–µ–±—è. –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –Ω–∞–∫—Ä—É—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏, –ª–∞–π–∫–∏, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –æ—Ç–∑—ã–≤—ã –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã.', reply_markup  = menu)
	except Exception as e:
		pass
	

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@bot.callback_query_handler(func=lambda c:True)
def keyboard(c):
	try:
		db = DB()
		if c.data == 'exit':
			bot.delete_message(c.message.chat.id, c.message.id)
			bot.register_next_step_handler(c.message, messages)
		if c.data == 'put':
			oplata = InlineKeyboardMarkup(row_width=1)
			link = InlineKeyboardButton('–û–ø–ª–∞—Ç–∏—Ç—å', url=f'https://qiwi.com/payment/form/99?amountFraction=0&currency=RUB&extra%5B%27account%27%5D=+79626025949&extra%5B%27comment%27%5D={c.message.chat.id}&blocked[0]=account&blocked[1]=comment')
			back = InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='exit')
			oplata.add(link, back)
			bot.send_message(c.message.chat.id, '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã üí∏–ø–æ–ø–æ–ª–Ω–∏—Ç—å üí≥–±–∞–ª–∞–Ω—Å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É(–≤—ã –ø–µ—Ä–µ–π–¥–µ—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã), –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—É—é —Å—É–º–º—É, –∑–∞—Ç–µ–º –ø—Ä–∏—à–ª–∏—Ç–µ —Å—é–¥–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ c –ø–æ–¥–ø–∏—Å—å—é –≤ –≤–∏–¥–µ —Ü–∏—Ñ—Ä—ã –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã –ø–µ—Ä–µ–≤–µ–ª–∏.', reply_markup = oplata)
			bot.register_next_step_handler(c.message, chek)
			
		if c.data == 'y':
			bot.delete_message(c.message.chat.id, c.message.message_id)
			id = c.message.caption.rsplit('= ', 2)[1]
			sum = c.message.caption.rsplit('id = ', 2)[0]
			db.money(id, -int(sum))
			bot.send_message(id, f'üí∏–î–µ–Ω—å–≥–∏ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ —Å—á–µ—Ç, –≤–∞—à –±–∞–ª–∞–Ω—Å: {db.getBalance(id)}')
		if c.data == 'n':
			bot.delete_message(c.message.chat.id, c.message.message_id)
			id = c.message.caption.rsplit('= ', 2)[1]
			bot.send_message(id, '–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.')			
		if c.data == 'like' or c.data == 'sub' or c.data == 'watch' or c.data == 'comment' or c.data == 'feed':
			task = {
				c.data == 'like': '–ª–∞–π–∫–∏',
				c.data == 'sub': "–ø–æ–¥–ø–∏—Å–∫–∏",
				c.data == 'watch': "–ø—Ä–æ—Å–º–æ—Ç—Ä—ã",
				c.data == 'comment': "–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏"
				}[True]
			db.setTask(c.message.chat.id, task)
			bot.send_message(c.message.chat.id, '–•–æ—Ä–æ—à–æ! –¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç, –≤–∏–¥–µ–æ –∏–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—á–∫—É –≤ —Å–æ—Ü —Å–µ—Ç–∏/—é—Ç—É–±–µ.')
			bot.register_next_step_handler(c.message, setLink)
			
	except Exception as e:
		print(e, 156)


@bot.message_handler(content_types=['text'])
def messages(message):
	try:
		config.uid = message.message_id
		db = DB()
		if message.chat.id == config.admin:
			config.text = message.text
		config.id = message.chat.id
		
		if message.text == 'üîê–ü—Ä–æ—Ñ–∏–ª—å':
			bot.send_message(message.chat.id, f'üìã–ò–º—è: {message.from_user.first_name} \n üí≥–ë–∞–ª–∞–Ω—Å: {db.getBalance(message.chat.id)} \n –†–µ—Ñ–µ—Ä–∞–ª—ã: {db.getRef(message.chat.id)} \n üìë–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–ª–Ω–µ–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π: {db.getNum(message.chat.id)}')
		
		if message.text == 'üí≥–ë–∞–ª–∞–Ω—Åüí∏':
			balance = db.getBalance(message.chat.id)
			bot.send_message(message.chat.id, f'üí∞–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} py–±. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∏–ª–∏ –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏. ', reply_markup = b)
			db.setAns(message.chat.id, 0)
			
		if message.text == 'üíπ–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑üíº':
			db.setOder(message.chat.id)
			bot.send_message(message.chat.id, f'–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∫—Ä—É—Ç–∏—Ç—å? –¶–µ–Ω—ã —É–∫–∞–∑–∞–Ω—ã –∑–∞ –æ–¥–∏–Ω –ª–∞–π–∫/–∫–æ–º–º–µ–Ω—Ç –∏ —Ç–¥. –°–Ω–∞—á–∞–ª–∞ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π —Å—É–º–º—ã. –í–∞—à –±–∞–ª–∞–Ω—Å: {db.getBalance(message.from_user.id)}', reply_markup=oder)

	except Exception as e:
		pass		

def chek(message):
	try:
		db = DB()
		photo = message.photo[0].file_id
		caption = message.caption
		db.setCash(message.chat.id, caption)
		bot.send_photo(config.admin, photo, caption + 'id = ' + str(message.chat.id), reply_markup=verifi)
	except Exception as e:
		bot.register_next_step_handler(message, messages)
		

def setLink(message):
	try:
		db = DB()
		url = message.text
		db.setUrl(message.chat.id, url)
		t = db.getTask(message.chat.id)
		cost = {
				t == '–ø–æ–¥–ø–∏—Å–∫–∏': 2,
				t == '–ª–∞–π–∫–∏': 1,
				t  == '–ø—Ä–æ—Å–º–æ—Ç—Ä—ã': 2,
				t == '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏': 5,
				t == '–æ—Ç–∑—ã–≤—ã': 5
				}[True]
		bot.send_message(message.chat.id, f'–û—Ç–ª–∏—á–Ω–æ! –û—Å—Ç–∞–ª—Å—è –æ–¥–∏–Ω —à–∞–≥. –û–¥–∏–Ω {t} —Å—Ç–æ–∏—Ç {cost} —Ä—É–±–ª—è. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π —Å—É–º–º—ã –∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ {t}. –° –≤–∞—à–µ–≥–æ —Å—á–µ—Ç–∞ —Å–ø–∏—à–µ—Ç—Å—è –Ω—É–∂–Ω—è —Å—É–º–º–∞.')
		bot.register_next_step_handler(message, OrderBegin)
	except Exception as e:
		pass

		
def OrderBegin(message):
	try:
		db = DB()
		try:
			t = db.getTask(message.chat.id)
			cost = {
				t == '–ø–æ–¥–ø–∏—Å–∫–∏': 2,
				t == '–ª–∞–π–∫–∏': 1,
				t  == '–ø—Ä–æ—Å–º–æ—Ç—Ä—ã': 2,
				t == '–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏': 5,
				t == '–æ—Ç–∑—ã–≤—ã': 5
				}[True]
			sum = int(message.text) * cost
			b = db.getBalance(message.chat.id)
			if b >= sum:
				db.setMoney(message.chat.id, sum/2)
				db.money(message.chat.id, sum)
				bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞–∫–∞–∑. –û–Ω –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –¥–Ω–µ–π. –û—Å—Ç–∞–≤—Ç–µ –∫–æ–º–º–µ–Ω—Ç—Ä–∏–π –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π.')
				bot.register_next_step_handler(message, setCom)
			else:
				bot.send_message(message.chat.id, '–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –ø–æ–∫—É–ø–∫–∏.')
		except Exception as e:
			print(e)
			bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ –±–µ–∑ –¥—Ä—É–≥–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤.')
			bot.register_next_step_handler(message, OrderBegin)
	except Exception as e:
		pass
			
			

def setCom(message):
	try:
		db = DB()
		db.setComment(message.chat.id, message.text)
	except:
		pass
		
	
bot.polling()